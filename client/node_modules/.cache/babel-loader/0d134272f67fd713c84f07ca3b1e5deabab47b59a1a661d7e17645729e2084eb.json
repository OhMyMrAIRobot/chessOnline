{"ast":null,"code":"var _jsxFileName = \"/Users/mrairobot/Desktop/main/ksis/Online_Chess/client/src/components/BoardComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport CellComponent from \"./CellComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardComponent = ({\n  board,\n  setBoard,\n  currentPlayer,\n  swapPlayer\n}) => {\n  _s();\n  const [selectedCell, setSelectedCell] = useState(null);\n  useEffect(() => {\n    highlightCells();\n  }, [selectedCell]);\n  function click(cell) {\n    var _selectedCell$_figure;\n    if (selectedCell && selectedCell === cell) setSelectedCell(null);else if (selectedCell && selectedCell !== cell && (_selectedCell$_figure = selectedCell._figure) !== null && _selectedCell$_figure !== void 0 && _selectedCell$_figure.canMove(cell)) {\n      selectedCell.moveFigure(cell);\n      setSelectedCell(null);\n    } else {\n      var _cell$_figure;\n      if (((_cell$_figure = cell._figure) === null || _cell$_figure === void 0 ? void 0 : _cell$_figure._color) === (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer._color)) {\n        setSelectedCell(cell);\n      }\n    }\n  }\n  function highlightCells() {\n    board.highlightCells(selectedCell);\n    updateBoard();\n  }\n  function updateBoard() {\n    const newBoard = board.getCopyBoard();\n    setBoard(newBoard);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: board._cells.map((row, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: row.map(cell => /*#__PURE__*/_jsxDEV(CellComponent, {\n        cell: cell,\n        selected: cell._x === (selectedCell === null || selectedCell === void 0 ? void 0 : selectedCell._x) && cell._y === (selectedCell === null || selectedCell === void 0 ? void 0 : selectedCell._y),\n        click: click\n      }, cell._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this))\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(BoardComponent, \"OFVjm5mk704+5WCzFQLJg89Ag6Q=\");\n_c = BoardComponent;\nexport default BoardComponent;\nvar _c;\n$RefreshReg$(_c, \"BoardComponent\");","map":{"version":3,"names":["React","useEffect","useState","CellComponent","jsxDEV","_jsxDEV","BoardComponent","board","setBoard","currentPlayer","swapPlayer","_s","selectedCell","setSelectedCell","highlightCells","click","cell","_selectedCell$_figure","_figure","canMove","moveFigure","_cell$_figure","_color","updateBoard","newBoard","getCopyBoard","className","children","_cells","map","row","index","Fragment","selected","_x","_y","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mrairobot/Desktop/main/ksis/Online_Chess/client/src/components/BoardComponent.tsx"],"sourcesContent":["import React, {FC, useEffect, useState} from 'react';\nimport {Board} from \"../models/Board\";\nimport CellComponent from \"./CellComponent\";\nimport {Cell} from \"../models/Cell\";\nimport {Player} from \"../models/Player\";\n\ninterface BoardProps {\n    board: Board;\n    setBoard: (board: Board) => void;\n    currentPlayer: Player | null;\n    swapPlayer: () => void;\n}\n\nconst BoardComponent: FC<BoardProps> = ({board, setBoard, currentPlayer, swapPlayer}) => {\n\n    const [selectedCell, setSelectedCell] = useState<Cell | null>(null)\n\n    useEffect(() => {\n        highlightCells();\n    }, [selectedCell])\n\n    function click(cell: Cell) {\n        if ((selectedCell && (selectedCell === cell)))\n            setSelectedCell(null);\n        else if (selectedCell && (selectedCell !== cell) && selectedCell._figure?.canMove(cell)){\n            selectedCell.moveFigure(cell);\n            setSelectedCell(null);\n        } else {\n            if (cell._figure?._color === currentPlayer?._color){\n                setSelectedCell(cell);\n            }\n        }\n    }\n\n    function highlightCells() {\n        board.highlightCells(selectedCell);\n        updateBoard();\n    }\n\n    function updateBoard() {\n        const newBoard = board.getCopyBoard();\n        setBoard(newBoard);\n    }\n\n    return (\n        <div className=\"board\">\n            {board._cells.map((row,index) =>\n                <React.Fragment key={index}>\n                    {row.map(cell =>\n                        <CellComponent\n                            cell = {cell}\n                            key = {cell._id}\n                            selected={cell._x === selectedCell?._x && cell._y === selectedCell?._y}\n                            click = {click}\n                        />\n                    )}\n                </React.Fragment>\n            )}\n        </div>\n    );\n};\n\nexport default BoardComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAOC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAEpD,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW5C,MAAMC,cAA8B,GAAGA,CAAC;EAACC,KAAK;EAAEC,QAAQ;EAAEC,aAAa;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAErF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAc,IAAI,CAAC;EAEnED,SAAS,CAAC,MAAM;IACZa,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,CAACF,YAAY,CAAC,CAAC;EAElB,SAASG,KAAKA,CAACC,IAAU,EAAE;IAAA,IAAAC,qBAAA;IACvB,IAAKL,YAAY,IAAKA,YAAY,KAAKI,IAAK,EACxCH,eAAe,CAAC,IAAI,CAAC,CAAC,KACrB,IAAID,YAAY,IAAKA,YAAY,KAAKI,IAAK,KAAAC,qBAAA,GAAIL,YAAY,CAACM,OAAO,cAAAD,qBAAA,eAApBA,qBAAA,CAAsBE,OAAO,CAACH,IAAI,CAAC,EAAC;MACpFJ,YAAY,CAACQ,UAAU,CAACJ,IAAI,CAAC;MAC7BH,eAAe,CAAC,IAAI,CAAC;IACzB,CAAC,MAAM;MAAA,IAAAQ,aAAA;MACH,IAAI,EAAAA,aAAA,GAAAL,IAAI,CAACE,OAAO,cAAAG,aAAA,uBAAZA,aAAA,CAAcC,MAAM,OAAKb,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEa,MAAM,GAAC;QAC/CT,eAAe,CAACG,IAAI,CAAC;MACzB;IACJ;EACJ;EAEA,SAASF,cAAcA,CAAA,EAAG;IACtBP,KAAK,CAACO,cAAc,CAACF,YAAY,CAAC;IAClCW,WAAW,CAAC,CAAC;EACjB;EAEA,SAASA,WAAWA,CAAA,EAAG;IACnB,MAAMC,QAAQ,GAAGjB,KAAK,CAACkB,YAAY,CAAC,CAAC;IACrCjB,QAAQ,CAACgB,QAAQ,CAAC;EACtB;EAEA,oBACInB,OAAA;IAAKqB,SAAS,EAAC,OAAO;IAAAC,QAAA,EACjBpB,KAAK,CAACqB,MAAM,CAACC,GAAG,CAAC,CAACC,GAAG,EAACC,KAAK,kBACxB1B,OAAA,CAACL,KAAK,CAACgC,QAAQ;MAAAL,QAAA,EACVG,GAAG,CAACD,GAAG,CAACb,IAAI,iBACTX,OAAA,CAACF,aAAa;QACVa,IAAI,EAAIA,IAAK;QAEbiB,QAAQ,EAAEjB,IAAI,CAACkB,EAAE,MAAKtB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEsB,EAAE,KAAIlB,IAAI,CAACmB,EAAE,MAAKvB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEuB,EAAE,CAAC;QACvEpB,KAAK,EAAIA;MAAM,GAFRC,IAAI,CAACoB,GAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGlB,CACL;IAAC,GARgBT,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASV,CACpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC7B,EAAA,CA/CIL,cAA8B;AAAAmC,EAAA,GAA9BnC,cAA8B;AAiDpC,eAAeA,cAAc;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}