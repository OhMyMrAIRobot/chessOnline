{"ast":null,"code":"import { Figure, FigureNames } from \"./Figure\";\nimport { Colors } from \"../Colors\";\nimport blackImg from \"../../resourses/images/black-pawn.png\";\nimport whiteImg from \"../../resourses/images/white-pawn.png\";\nexport class Pawn extends Figure {\n  constructor(color, cell) {\n    super(color, cell);\n    this._isFirstStep = true;\n    this._img = color === Colors.BLACK ? blackImg : whiteImg;\n    this._name = FigureNames.PAWN;\n  }\n  isPathObstructed(target) {\n    var _this$_cell$_figure;\n    const direction = ((_this$_cell$_figure = this._cell._figure) === null || _this$_cell$_figure === void 0 ? void 0 : _this$_cell$_figure._color) === Colors.BLACK ? 1 : -1;\n    const startY = this._cell._y + direction;\n    const endY = target._y;\n    const step = direction > 0 ? 1 : -1;\n    for (let y = startY; y !== endY; y += step) {\n      if (!this._cell._board.getCell(target._x, y).isEmpty()) {\n        return true;\n      }\n    }\n    return false;\n  }\n  canMove(target) {\n    var _this$_cell$_figure2, _this$_cell$_figure3;\n    if (!super.canMove(target)) return false;\n    const direction = ((_this$_cell$_figure2 = this._cell._figure) === null || _this$_cell$_figure2 === void 0 ? void 0 : _this$_cell$_figure2._color) === Colors.BLACK ? 1 : -1;\n    const firstStepDirection = ((_this$_cell$_figure3 = this._cell._figure) === null || _this$_cell$_figure3 === void 0 ? void 0 : _this$_cell$_figure3._color) === Colors.BLACK ? 2 : -2;\n    if (target._x === this._cell._x) {\n      if (target._y === this._cell._y + direction && this._cell._board.getCell(target._x, target._y).isEmpty()) {\n        if (!this._isFirstStep || !this.isPathObstructed(target)) {\n          return true;\n        }\n      } else if (this._isFirstStep && target._y === this._cell._y + firstStepDirection && this._cell._board.getCell(target._x, target._y).isEmpty()) {\n        return !this.isPathObstructed(target);\n      }\n    }\n    if (this.canPawnAttack(target) && this._cell.isEnemy(target)) {\n      return true;\n    }\n    return false;\n  }\n  moveFigure(target) {\n    super.moveFigure(target);\n    this._isFirstStep = false;\n  }\n}","map":{"version":3,"names":["Figure","FigureNames","Colors","blackImg","whiteImg","Pawn","constructor","color","cell","_isFirstStep","_img","BLACK","_name","PAWN","isPathObstructed","target","_this$_cell$_figure","direction","_cell","_figure","_color","startY","_y","endY","step","y","_board","getCell","_x","isEmpty","canMove","_this$_cell$_figure2","_this$_cell$_figure3","firstStepDirection","canPawnAttack","isEnemy","moveFigure"],"sources":["/Users/mrairobot/Desktop/main/ksis/lab4/client/src/models/figures/Pawn.ts"],"sourcesContent":["import {Figure, FigureNames} from \"./Figure\";\nimport {Colors} from \"../Colors\";\nimport {Cell} from \"../Cell\";\nimport blackImg from \"../../resourses/images/black-pawn.png\";\nimport whiteImg from \"../../resourses/images/white-pawn.png\";\n\nexport class Pawn extends Figure {\n\n    _isFirstStep: boolean = true;\n\n    constructor(color: Colors, cell: Cell) {\n        super(color, cell);\n        this._img = color === Colors.BLACK ? blackImg : whiteImg;\n        this._name = FigureNames.PAWN;\n    }\n\n    private isPathObstructed(target: Cell): boolean {\n        const direction = this._cell._figure?._color === Colors.BLACK ? 1 : -1;\n        const startY = this._cell._y + direction;\n        const endY = target._y;\n        const step = direction > 0 ? 1 : -1;\n\n        for (let y = startY; y !== endY; y += step) {\n            if (!this._cell._board.getCell(target._x, y).isEmpty()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    canMove(target: Cell): boolean {\n        if (!super.canMove(target))\n            return false;\n\n        const direction = this._cell._figure?._color === Colors.BLACK ? 1 : -1;\n        const firstStepDirection = this._cell._figure?._color === Colors.BLACK ? 2 : -2;\n\n        if (target._x === this._cell._x) {\n            if (target._y === this._cell._y + direction && this._cell._board.getCell(target._x, target._y).isEmpty()) {\n                if (!this._isFirstStep || !this.isPathObstructed(target)) {\n                    return true;\n                }\n            } else if (this._isFirstStep && target._y === this._cell._y + firstStepDirection && this._cell._board.getCell(target._x, target._y).isEmpty()) {\n                return !this.isPathObstructed(target);\n            }\n        }\n\n        if (this.canPawnAttack(target) && this._cell.isEnemy(target)){\n            return true;\n        }\n\n        return false;\n    }\n\n    moveFigure(target: Cell) {\n        super.moveFigure(target);\n        this._isFirstStep = false;\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}