{"ast":null,"code":"import { Cell } from \"./Cell\";\nimport { Colors } from \"./Colors\";\nimport { Pawn } from \"./figures/Pawn\";\nimport { King } from \"./figures/King\";\nimport { Queen } from \"./figures/Queen\";\nimport { Bishop } from \"./figures/Bishop\";\nimport { Knight } from \"./figures/Knight\";\nimport { Rook } from \"./figures/Rook\";\nexport class Board {\n  constructor() {\n    this._cells = [];\n    this._lostWhiteFigures = [];\n    this._lostBlackFigures = [];\n  }\n  // Fill board\n  initCells() {\n    for (let i = 7; i > 0; i++) {\n      const row = [];\n      for (let j = 7; j > 0; j++) {\n        if ((i + j) % 2 !== 0) {\n          row.push(new Cell(this, j, i, Colors.BLACK, null));\n        } else {\n          row.push(new Cell(this, j, i, Colors.WHITE, null));\n        }\n      }\n      this._cells.push(row);\n    }\n  }\n  getCell(x, y) {\n    return this._cells[y][x];\n  }\n  addPawns() {\n    for (let i = 0; i < 8; i++) {\n      new Pawn(Colors.BLACK, this.getCell(i, 1));\n      new Pawn(Colors.WHITE, this.getCell(i, 6));\n    }\n  }\n  addKings() {\n    new King(Colors.BLACK, this.getCell(4, 0));\n    new King(Colors.WHITE, this.getCell(4, 7));\n  }\n  addQueens() {\n    new Queen(Colors.BLACK, this.getCell(3, 0));\n    new Queen(Colors.WHITE, this.getCell(3, 7));\n  }\n  addBishops() {\n    new Bishop(Colors.BLACK, this.getCell(2, 0));\n    new Bishop(Colors.BLACK, this.getCell(5, 0));\n    new Bishop(Colors.WHITE, this.getCell(2, 7));\n    new Bishop(Colors.WHITE, this.getCell(5, 7));\n  }\n  addKnights() {\n    new Knight(Colors.BLACK, this.getCell(1, 0));\n    new Knight(Colors.BLACK, this.getCell(6, 0));\n    new Knight(Colors.WHITE, this.getCell(1, 7));\n    new Knight(Colors.WHITE, this.getCell(6, 7));\n  }\n  addRooks() {\n    new Rook(Colors.BLACK, this.getCell(0, 0));\n    new Rook(Colors.BLACK, this.getCell(7, 0));\n    new Rook(Colors.WHITE, this.getCell(0, 7));\n    new Rook(Colors.WHITE, this.getCell(7, 7));\n  }\n  addFigures() {\n    this.addKings();\n    this.addPawns();\n    this.addQueens();\n    this.addBishops();\n    this.addKnights();\n    this.addRooks();\n  }\n  highlightCells(selectedCell) {\n    for (let i = 0; i < this._cells.length; i++) {\n      const row = this._cells[i];\n      for (let j = 0; j < row.length; j++) {\n        var _selectedCell$_figure;\n        const target = row[j];\n        target._available = !!(selectedCell !== null && selectedCell !== void 0 && (_selectedCell$_figure = selectedCell._figure) !== null && _selectedCell$_figure !== void 0 && _selectedCell$_figure.canMove(target));\n      }\n    }\n  }\n  getCopyBoard() {\n    const newBoard = new Board();\n    newBoard._cells = this._cells;\n    newBoard._lostWhiteFigures = this._lostWhiteFigures;\n    newBoard._lostBlackFigures = this._lostBlackFigures;\n    return newBoard;\n  }\n}","map":{"version":3,"names":["Cell","Colors","Pawn","King","Queen","Bishop","Knight","Rook","Board","constructor","_cells","_lostWhiteFigures","_lostBlackFigures","initCells","i","row","j","push","BLACK","WHITE","getCell","x","y","addPawns","addKings","addQueens","addBishops","addKnights","addRooks","addFigures","highlightCells","selectedCell","length","_selectedCell$_figure","target","_available","_figure","canMove","getCopyBoard","newBoard"],"sources":["/Users/mrairobot/Desktop/main/ksis/lab4/client/src/models/Board.ts"],"sourcesContent":["import {Cell} from \"./Cell\";\nimport {Colors} from \"./Colors\";\nimport {Pawn} from \"./figures/Pawn\";\nimport {King} from \"./figures/King\";\nimport {Queen} from \"./figures/Queen\";\nimport {Bishop} from \"./figures/Bishop\";\nimport {Knight} from \"./figures/Knight\";\nimport {Rook} from \"./figures/Rook\";\nimport {Figure, FigureNames} from \"./figures/Figure\";\n\nexport class Board {\n    _cells: Cell[][] = [];\n    _lostWhiteFigures: Figure[] = [];\n    _lostBlackFigures: Figure[] = [];\n\n    // Fill board\n    public initCells() {\n        for (let i = 7; i > 0; i++) {\n            const row: Cell[] = [];\n            for (let j = 7; j > 0; j++) {\n                if ((i + j) % 2 !== 0 ) {\n                    row.push(new Cell(this, j, i, Colors.BLACK, null));\n                }\n                else {\n                    row.push(new Cell(this, j, i, Colors.WHITE, null));\n                }\n            }\n            this._cells.push(row);\n        }\n    }\n\n    public getCell(x: number, y: number){\n        return this._cells[y][x];\n    }\n\n    private addPawns() {\n        for (let i = 0; i < 8; i++){\n            new Pawn(Colors.BLACK, this.getCell(i, 1))\n            new Pawn(Colors.WHITE, this.getCell(i, 6))\n        }\n    }\n\n    private addKings() {\n        new King(Colors.BLACK, this.getCell(4, 0))\n        new King(Colors.WHITE, this.getCell(4, 7))\n    }\n\n    private addQueens() {\n        new Queen(Colors.BLACK, this.getCell(3, 0))\n        new Queen(Colors.WHITE, this.getCell(3, 7))\n    }\n\n    private addBishops() {\n        new Bishop(Colors.BLACK, this.getCell(2,0));\n        new Bishop(Colors.BLACK, this.getCell(5,0));\n        new Bishop(Colors.WHITE, this.getCell(2,7));\n        new Bishop(Colors.WHITE, this.getCell(5,7));\n    }\n\n    private addKnights() {\n        new Knight(Colors.BLACK, this.getCell(1,0));\n        new Knight(Colors.BLACK, this.getCell(6,0));\n        new Knight(Colors.WHITE, this.getCell(1,7));\n        new Knight(Colors.WHITE, this.getCell(6,7));\n    }\n\n    private addRooks() {\n        new Rook(Colors.BLACK, this.getCell(0,0));\n        new Rook(Colors.BLACK, this.getCell(7,0));\n        new Rook(Colors.WHITE, this.getCell(0,7));\n        new Rook(Colors.WHITE, this.getCell(7,7));\n    }\n\n    public addFigures() {\n        this.addKings();\n        this.addPawns();\n        this.addQueens();\n        this.addBishops();\n        this.addKnights();\n        this.addRooks();\n    }\n\n    public highlightCells(selectedCell: Cell | null)  {\n        for (let i = 0; i < this._cells.length; i++){\n            const row = this._cells[i];\n            for (let j = 0; j < row.length; j++){\n                const target = row[j];\n                target._available = !!selectedCell?._figure?.canMove(target);\n            }\n        }\n    }\n\n    public getCopyBoard() : Board {\n        const newBoard = new Board();\n        newBoard._cells = this._cells;\n        newBoard._lostWhiteFigures = this._lostWhiteFigures;\n        newBoard._lostBlackFigures = this._lostBlackFigures;\n        return newBoard;\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}