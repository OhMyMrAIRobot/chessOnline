{"ast":null,"code":"var _jsxFileName = \"/Users/mrairobot/Desktop/main/ksis/Online_Chess/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport BoardComponent from \"./components/BoardComponent\";\nimport { Board } from \"./models/Board\";\nimport { Player } from \"./models/Player\";\nimport { Colors } from \"./models/Colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [board, setBoard] = useState(new Board());\n  const [whitePlayer, setWhitePlayer] = useState(new Player(Colors.WHITE));\n  const [blackPlayer, setBlackPlayer] = useState(new Player(Colors.BLACK));\n  const [currentPlayer, setCurrentPlayer] = useState(null);\n  useEffect(() => {\n    Restart();\n    setCurrentPlayer(whitePlayer);\n  }, []);\n  function Restart() {\n    const newBoard = new Board();\n    newBoard.initCells();\n    newBoard.addFigures();\n    setBoard(newBoard);\n  }\n  function swapPlayer() {\n    setCurrentPlayer((currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer._color) === Colors.WHITE ? blackPlayer : whitePlayer);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(BoardComponent, {\n      board: board,\n      setBoard: setBoard,\n      currentPlayer: currentPlayer,\n      swapPlayer: swapPlayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"cZgmXVBcUtIxJaCfTnsEYS4wdok=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BoardComponent","Board","Player","Colors","jsxDEV","_jsxDEV","App","_s","board","setBoard","whitePlayer","setWhitePlayer","WHITE","blackPlayer","setBlackPlayer","BLACK","currentPlayer","setCurrentPlayer","Restart","newBoard","initCells","addFigures","swapPlayer","_color","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mrairobot/Desktop/main/ksis/Online_Chess/client/src/App.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport BoardComponent from \"./components/BoardComponent\";\nimport {Board} from \"./models/Board\";\nimport {Player} from \"./models/Player\";\nimport {Colors} from \"./models/Colors\";\n\nfunction App() {\n    const [board, setBoard] = useState(new Board());\n    const [whitePlayer, setWhitePlayer] = useState(new Player(Colors.WHITE));\n    const [blackPlayer, setBlackPlayer] = useState(new Player(Colors.BLACK));\n    const [currentPlayer, setCurrentPlayer] = useState <Player | null>(null)\n\n    useEffect(() => {\n        Restart();\n        setCurrentPlayer(whitePlayer);\n    }, [])\n\n    function Restart() {\n        const newBoard = new Board();\n        newBoard.initCells();\n        newBoard.addFigures();\n        setBoard(newBoard);\n    }\n\n    function swapPlayer() {\n        setCurrentPlayer(currentPlayer?._color === Colors.WHITE ? blackPlayer : whitePlayer);\n    }\n\n    return (\n        <div className=\"app\">\n            <BoardComponent\n                board={board}\n                setBoard={setBoard}\n                currentPlayer={currentPlayer}\n                swapPlayer={swapPlayer}\n            />\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAO,WAAW;AAClB,OAAOC,cAAc,MAAM,6BAA6B;AACxD,SAAQC,KAAK,QAAO,gBAAgB;AACpC,SAAQC,MAAM,QAAO,iBAAiB;AACtC,SAAQC,MAAM,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAIE,KAAK,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAIG,MAAM,CAACC,MAAM,CAACS,KAAK,CAAC,CAAC;EACxE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,IAAIG,MAAM,CAACC,MAAM,CAACY,KAAK,CAAC,CAAC;EACxE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAiB,IAAI,CAAC;EAExED,SAAS,CAAC,MAAM;IACZoB,OAAO,CAAC,CAAC;IACTD,gBAAgB,CAACP,WAAW,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAEN,SAASQ,OAAOA,CAAA,EAAG;IACf,MAAMC,QAAQ,GAAG,IAAIlB,KAAK,CAAC,CAAC;IAC5BkB,QAAQ,CAACC,SAAS,CAAC,CAAC;IACpBD,QAAQ,CAACE,UAAU,CAAC,CAAC;IACrBZ,QAAQ,CAACU,QAAQ,CAAC;EACtB;EAEA,SAASG,UAAUA,CAAA,EAAG;IAClBL,gBAAgB,CAAC,CAAAD,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEO,MAAM,MAAKpB,MAAM,CAACS,KAAK,GAAGC,WAAW,GAAGH,WAAW,CAAC;EACxF;EAEA,oBACIL,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAChBpB,OAAA,CAACL,cAAc;MACXQ,KAAK,EAAEA,KAAM;MACbC,QAAQ,EAAEA,QAAS;MACnBO,aAAa,EAAEA,aAAc;MAC7BM,UAAU,EAAEA;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACtB,EAAA,CAhCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}